


stories: 
  - database  
  - ci_cd
  - kubernetes

actions: 
  - template 'rails/.circleci/config.yml.tt', './.circleci/config.yml' 
  - template 'rails/docker-compose.yml.tt', './docker-compose.yml', @config.env
  - template 'base/dotenv', './.env', @config.env
  - directory 'rails/roro', './roro', @config.env
  - chmod "roro/docker-entrypoint.sh", 0755


startup: 
  success: "Your app should be available at http://localhost:3000"
  commands: 
    - docker-compose build --no-cache
    - docker-compose up -d
    - docker-compose run app bin/rails db:create
    - docker-compose run app bin/rails db:migrate
    - 'docker-compose run app echo #{success_msg}'

env_vars: 
  ruby_version: '2.7'
  database_host: database
  frontend_service: frontend
  database_service: database

choices:
  config_std_out_true: 
    question: |
      The team at Heroku, among others, recommend logging to STDOUT 
      and treating your logs as streams. We'll set this to 
      true as an environment variable but it may also be helpful
      to configure './config/boot.rb' with '$stdout.sync = true' 
      just in case that doesn't work. 
      Would you like to configure this? 
    choices: 
      y: 'Yes'
      n: 'No'
    default: y

  insert_roro_gem_into_gemfile: 
    question: |
      Many developers believe it's good idea to secure sensitive 
      environment files and variables. You can use RoRo to 
      generate secret keys known only to you for use in any
      environment, and then use them to encrypt and decrypt 
      these files. Would you like to add RoRo to your Gemfile?
    choices: 
      y: 'Yes'
      n: 'No'
    default: n
        
  gitignore_sensitive_files:
    question: | 
      If you plan to use the environment files RoRo generates for 
      your own environment variables, it's a good idea to keep 
      these files out of source control. Would you like RoRo to 
      modify your .gitignore file to accomplish this for you ?
    choices: 
      y: 'Yes'
      n: 'No'
    default: y
      
  insert_hfci_gem_into_gemfile: 
    question: | 
      Jim Weirich passed too soon and remains missed. In addition 
      to Rake, Jim wrote a beautiful gem called 'Given' that makes 
      Rspec and Minitest less ugly and thus your tests more easy to 
      write. Would you like to install a gem called 
      handsome_fencer-test that allows you to try it out?
    choices: 
      y: 'Yes'
      n: 'No' 
    default: n
